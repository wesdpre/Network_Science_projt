# The comments in this code were created with the help of the copilot, 
# and the code was created by me, but there was proposed code that changed my idea of ​​how to write the code.

import collections
import numpy as np
import os

from src.load_save_network import save_network

def generate_erdos_renyi(n, p, filename=None, random_seed=None, file_remove=False):
    """
    Generates a random Erdős-Rényi network and saves it to a file.
    The network is generated by creating edges between nodes with a given probability p.
    The nodes are numbered from 0 to n-1.
    
    Args:
        n (int): The number of nodes in the network.
        p (float): The probability that any pair of nodes is connected.
        filename (str): The name of the file to save the network.
            If None, the network is not saved to a file.
        random_seed (int): The random seed for reproducibility.
            If None, a random seed is used.
    Returns:
        list: A list of tuples representing the edges in the network.
            Each tuple (i, j) indicates an edge between node i and node j,
            where i < j to avoid duplicates.
    """
    if not (random_seed is None):
        np.random.seed(random_seed)
    
    edges = []
    for i in range(n): # range of nodes
        # Generate edges for each node i
        for j in range(i+1, n):
            if np.random.rand() < p:
                edges.append((i,j))

    if not (filename is None):
        save_network(edges, filename, file_remove=file_remove)
    return edges

